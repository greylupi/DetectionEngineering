
DeviceProcessEvents
| where FileName =~ "powershell.exe"
| where ProcessCommandLine has_all ("curl", "-useb", ".php")
| where ProcessCommandLine contains "http"


DeviceProcessEvents
| where FileName =~ "wscript.exe"
| where ProcessCommandLine has_any (".js", " .js", ".JS", " .JS")


//After the initial deobfuscation and decoding, the second stage of PowerShell starts by attempting to bypass Antimalware Scan Interface (AMSI)
//using a known technique to fake AMSI initialization failure: setting the variable amsiInitFailed of the System.Management.Automation.AmsiUtils object to TRUE.
// Basic KQL Detection for AMSI Bypass via PowerShell:
DeviceProcessEvents
| where FileName =~ "powershell.exe"
| where ProcessCommandLine has "AmsiUtils" and ProcessCommandLine has "amsiInitFailed"

//Attackers often use base64 encoding (-EncodedCommand), so itâ€™s also useful to detect that pattern:
DeviceProcessEvents
| where FileName =~ "powershell.exe"
| where ProcessCommandLine has "-enc" or ProcessCommandLine has "-encodedcommand"
